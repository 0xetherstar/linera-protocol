// Copyright (c) Zefchain Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

//! Types for the exported futures for the service endpoints.
//!
//! Each type is called by the code generated by [`wit_bindgen_rust`] when the host calls the guest
//! WASM module's respective endpoint. This module contains the code to forward the call to the
//! service type that implements [`linera_sdk::Service`].

use super::super::ApplicationState;
use linera_sdk::service::{self, exported_futures};
use wit_bindgen_guest_rust::Handle;

pub struct QueryApplication(exported_futures::QueryApplication<ApplicationState>);

impl service::QueryApplication for QueryApplication {
    fn new(context: service::QueryContext, argument: Vec<u8>) -> Handle<Self> {
        Handle::new(QueryApplication(exported_futures::QueryApplication::new(
            context, argument,
        )))
    }

    fn poll(&self) -> service::PollQuery {
        self.0.poll()
    }
}
